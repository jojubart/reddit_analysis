
AWSTemplateFormatVersion: '2010-09-09'

#
# Parameters substituted in the Resources section
# These parameters are names of the resources created in the Data Catalog
Parameters:
  DatabaseName:
    Type: String
    Default: reddit_db
  BucketName:
      Type: String
      Description: s3 destination bucket
  SubredditTable:
    Type: String
    Default: subreddit
  SubmissionTable:
    Type: String
    Default: submission
  CommentTable:
    Type: String
    Default: comment
  
# Resources to create metadata in the Data Catalog
Resources:
###
# Create an AWS Glue database
  DatabaseReddit:
    Type: AWS::Glue::Database
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseInput:
        Name: !Ref DatabaseName	
        Description: Database to reddit data
###
# Create the AWS Glue tables
  TableSubreddit:
    # Creating the table waits for the database to be created
    DependsOn: DatabaseReddit
    Type: AWS::Glue::Table
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseName: !Ref DatabaseName
      TableInput:
        Name: !Ref SubredditTable
        Description: Define the columns of the subreddit table
        TableType: EXTERNAL_TABLE
        Parameters: {
    "classification": "parquet"
  }
        StorageDescriptor:
          Columns:
            - Name: url
              Type: string
            - Name: title
              Type: string
            - Name: subscribers
              Type: int
            - Name: description_short
              Type: string
            - Name: description_long
              Type: string
            - Name: creation_date
              Type: string
            - Name: over18
              Type: boolean
          Location:
            Fn::Join:
                - ''
                - - "s3://"
                  - !Ref BucketName
                  - "/subreddit/"
          InputFormat: org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat
          OutputFormat: org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat
          BucketColumns: []
          SortColumns: []
          SerdeInfo:
            SerializationLibrary: org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe
            Parameters:
              serialization.format: '1'
              "parquet.compression": "SNAPPY"
          StoredAsSubDirectories: false

  TableSubmission:
    # Creating the table waits for the database to be created
    DependsOn: DatabaseReddit
    Type: AWS::Glue::Table
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseName: !Ref DatabaseName
      TableInput:
        Name: !Ref SubmissionTable
        Description: Define the columns of the submission table
        TableType: EXTERNAL_TABLE
        Parameters: {
    "classification": "parquet"
  }

        StorageDescriptor:
          Columns:
            - Name: timestamp
              Type: string
            - Name: submission_id
              Type: string
            - Name: subreddit
              Type: string
            - Name: title
              Type: string
            - Name: selftext
              Type: string
            - Name: score
              Type: int
            - Name: stickied
              Type: boolean
            - Name: author
              Type: string
            - Name: url
              Type: string
            - Name: domain
              Type: string
            - Name: upvote_ratio
              Type: double
            - Name: current_subreddit_subscribers
              Type: int
            - Name: num_comments
              Type: int
            - Name: selfpost
              Type: boolean
            - Name: distinguished
              Type: string
            - Name: num_awards
              Type: int
            - Name: contains_profanity
              Type: boolean
          Location:
            Fn::Join:
                - ''
                - - "s3://"
                  - !Ref BucketName
                  - "/submission/"
          InputFormat: org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat
          OutputFormat: org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat
          BucketColumns: []
          SortColumns: []
          SerdeInfo:
            SerializationLibrary: org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe
            Parameters:
              serialization.format: '1'
              "parquet.compression": "SNAPPY"
          StoredAsSubDirectories: false

  TableComment:
      # Creating the table waits for the database to be created
      DependsOn: DatabaseReddit
      Type: AWS::Glue::Table
      Properties:
        CatalogId: !Ref AWS::AccountId
        DatabaseName: !Ref DatabaseName
        TableInput:
          Name: !Ref CommentTable
          Description: Define the columns of the comment table
          TableType: EXTERNAL_TABLE
          Parameters: {
      "classification": "parquet"
    }

          StorageDescriptor:
            Columns:
              - Name: submission_id
                Type: string
              - Name: timestamp
                Type: string
              - Name: comment_id
                Type: string
              - Name: subreddit
                Type: string
              - Name: comment_body
                Type: string
              - Name: author
                Type: string
              - Name: score
                Type: int
              - Name: controversiality
                Type: int
              - Name: num_awards
                Type: int
              - Name: is_submitter
                Type: boolean
              - Name: is_root
                Type: boolean
              - Name: stickied
                Type: boolean
              - Name: contains_profanity
                Type: boolean
              - Name: subjectivity
                Type: double
              - Name: polarity
                Type: double
            Location:
              Fn::Join:
                  - ''
                  - - "s3://"
                    - !Ref BucketName
                    - "/comment/"
            InputFormat: org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat
            OutputFormat: org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat
            BucketColumns: []
            SortColumns: []
            SerdeInfo:
              SerializationLibrary: org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe
              Parameters:
                serialization.format: '1'
                "parquet.compression": "SNAPPY"
            StoredAsSubDirectories: false
